@model IEnumerable<HexaControl.Models.Blog>

@{
    ViewData["Title"] = "Index";
}
<style>
    .star-cb-group {
        display: inline-block;
        position: relative;
        vertical-align: middle;
    }

        .star-cb-group input[type="checkbox"] {
            display: none;
        }

        .star-cb-group label {
            color: #ccc;
            font-size: 30px;
            margin: 0;
            padding: 0;
        }



            .star-cb-group label:hover:before,
            .star-cb-group label:hover ~ label:before,
            .star-cb-group input[type="checkbox"]:checked ~ label:before {
                content: "\2605";
                color: #37CCAB;
            }
</style>

<p>
    <a asp-action="Create" class="btn btn-success">اضف مقالة  +</a>
</p>
<table class="table" dir="rtl" style="padding-right:0">
    <thead>
        <tr>
            <th>
                عنوان المقالة 
            </th>

            <th>
               تاريخ النشر 
            </th>
            <th>
               التفضيل 
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.MainArticle)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.PubDate)
                </td>
                <td>
                    <div class="star-cb-group">
                        <input type="checkbox" id="heroStatus_@item.Id" data-id="@item.Id" class="heroStatus visually-hidden" />
                        <label for="heroStatus_@item.Id">&#9734;</label>
                    </div>
                </td>
                <td>
                    <a asp-action="Delete" class="btn btn-outline-danger" asp-route-id="@item.Id">Delete</a>|

                    <a asp-action="Edit" class="btn btn-outline-primary" asp-route-id="@item.Id">Edit</a>

                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
  // Initialize the checkbox state based on the value stored in the database
  $(".heroStatus").each(function () {
    var itemId = $(this).data('id');
    var url = '@Url.Content("~/Admin/Blogs/GetCheckboxValue")';

    $.ajax({
      type: "GET",
      url: url,
      data: { itemId: itemId },
      success: function (data) {
        var isChecked = data.is_checked;
        $('input[data-id="' + itemId + '"]').prop('checked', isChecked);
      },
      error: function () {
        console.log("An error occurred while retrieving the checkbox value.");
      }
    });
  });

  $(".heroStatus").change(function () {
    var maxChecked = 3; // Maximum number of checkboxes that can be checked
    var checkedCount = $('.heroStatus:checked').length;
    var itemId = $(this).data('id');
    var isChecked = $(this).is(":checked");

    console.log("itemId", itemId, "isChecked", isChecked);

    // If the maximum limit has been reached, disable any further checkboxes
    if (checkedCount > maxChecked) {
      $(this).prop('checked', false);
      isChecked = false;
      alert('You can only select up to 3 Blogs.');
    }

    // Update the checkbox state in the database
    var url = '@Url.Content("~/Admin/Blogs/SaveCheckboxValue")';
    $.ajax({
      type: "POST",
      url: url,
      data: { itemId: itemId, isChecked: isChecked },
      success: function (data) {
        console.log(data);
      },
      error: function () {
        console.log("An error occurred while saving the checkbox value.");
      }
    });
  });
});


    </script>






}







@*$(document).ready(function () {
    // Initialize the checkbox state based on the value stored in localStorage
    $(".heroStatus").each(function () {
        var itemId = $(this).data('id');
        var isChecked = localStorage.getItem(itemId) === 'true';
        $(this).prop('checked', isChecked);
    });

    $(".heroStatus").change(function () {
        var maxChecked = 3; // Maximum number of checkboxes that can be checked
        var checkedCount = $('.heroStatus:checked').length;
        var itemId = $(this).data('id');
        var isChecked = $(this).is(":checked");

        console.log("itemId", itemId, "isChecked", isChecked);

        // If the maximum limit has been reached, disable any further checkboxes
        if (checkedCount > maxChecked) {
            $(this).prop('checked', false);
            isChecked = false;
            alert('You can only select up to 3  Blogs.');
        }


    // Store the checkbox value in localStorage
    localStorage.setItem(itemId, isChecked);

    var url = '@Url.Content("~/Admin/Blogs/SaveCheckboxValue")';
    $.ajax({
    type: "POST",
    url: url,
    data: { itemId: itemId, isChecked: isChecked },
    success: function (data) {
    console.log(data);
    },
    error: function () {
    console.log("An error occurred while saving the checkbox value.");
    }
    });
    });
    });*@